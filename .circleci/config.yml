
version: 2
jobs:
  build:
    docker:
      - image: ubuntu:eoan
    working_directory: /tmp/src/gifti_clib
    steps:
      - run:
          name: Install required software
          command: |
            apt-get update && apt-get install -y -q eatmydata \
            && eatmydata apt-get update && apt-get install -y -q  \
            libexpat1-dev \
            zlib1g-dev \
            git \
            wget \
            cmake \
            make \
            gcc 
      - checkout

      - run:
          name: Build and test gifti using prefix
          command: |
            mkdir ../build_with_prefix
            cd ../build_with_prefix
            cmake ../gifti_clib -DNIFTI_PACKAGE_PREFIX=test_
            make
            ctest --output-on-failure

      - run:
          name: Build and test gifti, with install
          command: |
            mkdir ../build
            cd ../build
            cmake ../gifti_clib
            make install
            ctest --output-on-failure

      - run:
          name: Make use of installed nifti_clib
          command: |
            mkdir ../build_with_sys_nifti
            cd ../build_with_sys_nifti
            cmake ../gifti_clib -DUSE_SYSTEM_NIFTI=ON
            make
            ctest --output-on-failure

  # macos_build:
  #   macos:
  #       xcode: "11.2.1"
  #   steps: # a series of commands to run
  #     - checkout
  #     - run:
  #         name: Setup on macos
  #         command: |
  #           brew install expat cmake make
  #     - run:
  #         name: Build on macos
  #         command: |
  #           mkdir ../build
  #           cd ../build
  #           cmake ../gifti_clib
  #           make
  #           ctest --output-on-failure


workflows:
  version: 2
  gifti_build_and_test:
    jobs:
      - build:
          filters:
            branches:
              ignore: /doc\/.*/
            tags:
              only: /.*/
      # - macos_build:
      #     filters:
      #       branches:
      #         ignore: /doc\/.*/
      #       tags:
      #         only: /.*/

